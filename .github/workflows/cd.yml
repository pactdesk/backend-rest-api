name: Continuous Deployment

on:
  push:
    branches:
      - test
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment-specific variables
        id: vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
            echo "ENVIRONMENT=tst" >> $GITHUB_OUTPUT
            echo "IMAGE_TAG=tst-${{ github.sha }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=prd" >> $GITHUB_OUTPUT
            echo "IMAGE_TAG=prd-${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: 'Az CLI login with OIDC'
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: 'ACR Login'
        run: |
          az acr login --name ${{ vars.ACR_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.ACR_NAME }}.azurecr.io/pactdesk-api:${{ steps.vars.outputs.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: pactdesk-api-${{ steps.vars.outputs.ENVIRONMENT }}
          resourceGroup: rg-pactdesk-${{ steps.vars.outputs.ENVIRONMENT }}
          imageToDeploy: ${{ vars.ACR_NAME }}.azurecr.io/pactdesk-api:${{ steps.vars.outputs.IMAGE_TAG }}
